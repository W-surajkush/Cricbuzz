@page "/upcoming"
@inject IConfiguration Configuration
@inject HttpClient Http
@using Cricbuzz.Models
@using System.Text.Json

<PageTitle>Upcoming</PageTitle>

@if (matchList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h4>Upcoming Match Details:</h4>
    @foreach (var match in upcomingMatch.Data)
    {
        <div>
            <h5>@match.Series</h5>
            <p>Status: @match.Status</p>
            <p>Match Type: @match.MatchType</p>
            <p>Date and Time: @match.DateTimeGMT.ToString("yyyy-MM-ddTHH:mm:ss")</p>
            <p>Team 1: @match.T1</p>
            <p>Team 2: @match.T2</p>
        </div>
    }

}


@code {
    private Matches? matchList;
    string? api;
    int count = 1;

    private Matches upcomingMatch;

    protected override void OnInitialized()
    {
        upcomingMatch = new Matches { Data = new List<MatchData>() };
    }

    protected override async Task OnInitializedAsync()
    {
        // Replace with your API endpoint
        api = Configuration["CRICKET_API_KEY"];
        var response = await Http.GetAsync($"https://api.cricapi.com/v1/cricScore?apikey={api}");
        response.EnsureSuccessStatusCode();

        var jsonString = await response.Content.ReadAsStringAsync();
        matchList = JsonSerializer.Deserialize<Matches>(jsonString, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });

        if (matchList != null)
        {
            foreach (var match in matchList.Data)
            {
                if (match.Status == "Match not started")
                {
                    upcomingMatch.Data.Add(match);
                }
            }
        }
    }
}